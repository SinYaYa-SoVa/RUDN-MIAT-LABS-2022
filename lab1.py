"""
Методы интеллектуального анализа текстов
Тема 1. Регулярные выражения
"""
import re


# 1. Выделить из текста автомобильные номера.
def task1():
    def tests():
        test_string = "РТУ220О KE800К П227НА С227НА Е199КБ Е512KM О503ДП Р59ОТС A771BE Х281ОН 112МНО Т51РУ Е390МВ М9000РТ М900РТУ В5РСХИ "
        test_string2 = 'Автомобиль с номером В666ОР злостно нарушил ПДД.'
        assert re.findall(regexp, test_string) == ['С227НА', 'Х281ОН', 'Е390МВ'], 'Проверьте регулярное выражение'
        assert re.findall(regexp, test_string2) == ['В666ОР'], 'Проверьте регулярное выражение'
        print("Задание 1: Тесты пройдены")

    regexp = r'[АВЕКМНОРСТУХ]\d{3}[АВЕКМНОРСТУХ]{2}\b'
    tests()


# 2. Почистить текст от html-тегов.
def task2():
    with open('moviescripts.html', 'r', encoding='utf-8') as f:
        text = f.read()

    def clean_func(text):
        clean_text = re.sub(r'(<.*?>)|\n', '', text)
        return clean_text.strip()

    def tests():
        assert '\n' not in result, 'Результат должен выдаваться одной строкой!'
        assert result[
               700:800] == 'мые прекрасные, остаются только идеями и сами по себе ценятся недорого. Иное дело — идеи, разработан'
        assert result[
               -100:] == 'ты должны научиться спокойно расставаться со своими детищами и переключаться на настоящее и будущее.'
        print("Задание 2: Тесты пройдены")

    result = clean_func(text)
    tests()


# 3. С помощью одного выражения с re.sub собрать в предложение набор токенов ('Привет, как дела?' из ['Привет', ',',
# 'как', 'дела', '?'])
def task3():
    def tests():
        assert make_sentence(
            ["Привет", ",", "как", "дела", "?"]) == 'Привет, как дела?', 'Проверьте регулярное выражение'

        text = "Впервые передо мной забрезжил свет потенциальной осмысленности регэкспов: http://docs.python.org/dev/howto/regex.html понятно и доходчиво объясняет их функцию в роли трафарета, — использование групп для выделения конкретных участков текста."
        tokens = ['Впервые', 'передо', 'мной', 'забрезжил', 'свет', 'потенциальной', 'осмысленности', 'регэкспов', ':',
                  'http://docs.python.org/dev/howto/regex.html', 'понятно', 'и', 'доходчиво', 'объясняет', 'их',
                  'функцию', 'в', 'роли', 'трафарета', ',', '—', 'использование', 'групп', 'для', 'выделения',
                  'конкретных', 'участков', 'текста', '.']
        assert make_sentence(tokens) == text, 'Проверьте регулярное выражение'
        print("Задание 3: Тесты пройдены")

    make_sentence = lambda c: (re.sub(r'(\w)\s(\W)', r'\1\2', ' '.join([i for i in c]))).strip()
    tests()



if __name__ == '__main__':
    task1()
    task2()
    task3()
